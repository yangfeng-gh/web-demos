{"version":3,"sources":["throw4.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,QAAI,iCAAM,SAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEI,QAAQ,GAAR,CAAY,OAAZ,CAFJ;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+BAMA,QAAQ,GAAR,CAAY,OAAZ,CANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAU,GAAV;AAAA,KAAN,CAAJ;;AASA,QAAI,IAAI,KAAR;AACA,MAAE,IAAF;AACA,MAAE,KAAF;AACA,MAAE,IAAF;AACA;AACA;AACA","file":"throw4.js","sourcesContent":["/**\r\n * \r\n */\r\nvar gen = function* gen(){\r\n    try {\r\n        yield console.log('hello');\r\n    } catch (e) {\r\n        // ...\r\n    }\r\n    yield console.log('world');\r\n}\r\n\r\nvar g = gen();\r\ng.next();\r\ng.throw();\r\ng.next();\r\n// hello\r\n// world\r\n/*\r\n    上面代码在两次next方法之间，使用throw方法抛出了一个错误。\r\n    由于这个错误在Generator函数内部被捕获了，所以不影响第二次next方法的执行。\r\n    如果Generator函数内部没有try...catch,则遍历直接终止\r\n*/"]}