{"version":3,"sources":["return.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;6CAGU,G;8CAeA,G;;AAlBV;;;AAGA,aAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU,CADV;;AAAA;AAAA;AAAA,+BAEU,CAFV;;AAAA;AAAA;AAAA,+BAGU,CAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,QAAI,CAAJ;AACA,QAAI,IAAI,KAAR;;AAEA,QAAI,EAAE,IAAF,EAAJ,C,CAAqB;AACrB,QAAI,EAAE,MAAF,CAAS,KAAT,CAAJ,C,CAAqB;AACrB,QAAI,EAAE,IAAF,EAAJ,C,CAAqB;AACrB;AACA;;AAEA;AACA,aAAU,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU,CADV;;AAAA;AAAA;AAAA,+BAEU,CAFV;;AAAA;AAAA;AAAA,+BAGU,CAHV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMA,QAAI,IAAI,KAAR;;AAEA,MAAE,IAAF,G,CAAgB;AAChB,MAAE,MAAF,G,CAAW","file":"return.js","sourcesContent":["/**\r\n * Generator函数返回的遍历器对象，还有一个return方法，可以返回给定的值，并且终结遍历Generator函数。\r\n */\r\nfunction* gen() {\r\n    yield 1;\r\n    yield 2;\r\n    yield 3;\r\n}\r\nvar v;\r\nvar g = gen();\r\n\r\nv = g.next();        // { value: 1, done: false }\r\nv = g.return('foo'); // { value: \"foo\", done: true }\r\nv = g.next();        // { value: undefined, done: true }\r\n// 面代码中，遍历器对象g调用return方法后，返回值的value属性就是return方法的参数foo。\r\n// 并且，Generator函数的遍历就终止了，返回值的done属性为true，以后再调用next方法，done属性总是返回true。\r\n\r\n// 如果return方法调用时，不提供参数，则返回值的value属性为undefined。\r\nfunction* gen() {\r\n    yield 1;\r\n    yield 2;\r\n    yield 3;\r\n}\r\n\r\nvar g = gen();\r\n\r\ng.next()        // { value: 1, done: false }\r\ng.return() // { value: undefined, done: true }"]}