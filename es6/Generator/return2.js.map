{"version":3,"sources":["return2.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;6CAGU,O;;AAHV;;;AAGA,aAAU,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACU,CADV;;AAAA;AAAA;AAAA;AAAA,+BAGc,CAHd;;AAAA;AAAA;AAAA,+BAIc,CAJd;;AAAA;AAAA;AAAA;AAAA,+BAMc,CANd;;AAAA;AAAA;AAAA,+BAOc,CAPd;;AAAA;AAAA;;AAAA;AAAA;AAAA,+BASU,CATV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA,QAAI,IAAI,SAAR;AACA,MAAE,IAAF,G,CAAS;AACT,MAAE,IAAF,G,CAAS;AACT,MAAE,MAAF,CAAS,CAAT,E,CAAY;AACZ,MAAE,IAAF,G,CAAS;AACT,MAAE,IAAF,G,CAAS;AACT","file":"return2.js","sourcesContent":["/**\r\n * 如果Generator函数内部有try...finally代码块，那么return方法会推迟到finally代码块执行完再执行。\r\n */\r\nfunction* numbers () {\r\n    yield 1;\r\n    try {\r\n        yield 2;\r\n        yield 3;\r\n    } finally {\r\n        yield 4;\r\n        yield 5;\r\n    }\r\n    yield 6;\r\n}\r\nvar g = numbers()\r\ng.next() // { done: false, value: 1 }\r\ng.next() // { done: false, value: 2 }\r\ng.return(7) // { done: false, value: 4 }\r\ng.next() // { done: false, value: 5 }\r\ng.next() // { done: true, value: 7 }\r\n// 调用return方法后，就开始执行finally代码块，然后等到finally代码块执行完，再执行return方法。\r\n\r\n"]}