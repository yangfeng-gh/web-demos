{"version":3,"sources":["暂缓执行函数.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;2CAKU,C;;AALV;;;;;AAKA,WAAU,CAAV;AAAA;AAAA;AAAA;AAAA;AACE,oBAAQ,GAAR,CAAY,MAAZ;;AADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,MAAI,YAAY,GAAhB;;AAEA,aAAW,YAAW;AACpB,cAAU,IAAV;AACD,GAFD,EAEG,IAFH","file":"暂缓执行函数.js","sourcesContent":["/**\r\n * Generator 函数可以不用yield表达式，这时就变成了一个单纯的暂缓执行函数。\r\n * 函数f如果是普通函数，在为变量generator赋值时就会执行。\r\n * 但是，函数f是一个 Generator 函数，就变成只有调用next方法时，函数f才会执行。\r\n */\r\nfunction* f() {\r\n  console.log('执行了！');\r\n}\r\n\r\nvar generator = f();\r\n\r\nsetTimeout(function() {\r\n  generator.next()\r\n}, 2000)"]}