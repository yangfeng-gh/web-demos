{"version":3,"sources":["函数的length属性.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;;;;AAIA,YAAQ,GAAR,CAAa,UAAU,CAAV,EAAa,CAAE,CAAhB,CAAkB,MAA9B,E,CAAsC;AACtC,YAAQ,GAAR,CAAa,YAAiB;AAAA,YAAP,CAAO,uEAAH,CAAG;AAAE,KAApB,CAAsB,MAAlC,E,CAA0C;AAC1C,YAAQ,GAAR,CAAa,UAAU,CAAV,EAAa,CAAb,EAAuB;AAAA,YAAP,CAAO,uEAAH,CAAG;AAAE,KAA1B,CAA4B,MAAxC,E,CAAgD;;AAEhD;AACA;AACA;;AAEA,YAAQ,GAAR,CAAa,YAAkB,CAAE,CAArB,CAAuB,MAAnC,E,CAA4C;;AAE5C;AACA,YAAQ,GAAR,CAAa,YAAuB;AAAA,YAAb,CAAa,uEAAT,CAAS;AAAA,YAAN,CAAM;AAAA,YAAH,CAAG;AAAE,KAA1B,CAA4B,MAAxC,E,CAAgD;AAChD,YAAQ,GAAR,CAAa,UAAU,CAAV,EAAuB;AAAA,YAAV,CAAU,uEAAN,CAAM;AAAA,YAAH,CAAG;AAAE,KAA1B,CAA4B,MAAxC,E,CAAgD;;AAEhD,QAAI,MAAM,OAAV;AACA,QAAI,IAAI,SAAJ,CAAI;AAAA,eAAK,GAAL;AAAA,KAAR;;AAEA,aAAS,GAAT,GAAuB;AAAA,YAAV,IAAU,uEAAH,CAAG;;AACnB,YAAI,MAAM,OAAV;AACA,gBAAQ,GAAR,CAAY,MAAZ,EAFmB,CAEE;AACxB;;AAED;;AAEA,aAAS,GAAT,GAA+B;AAAA,YAAlB,IAAkB,uEAAX;AAAA,mBAAM,GAAN;AAAA,SAAW;;AAC3B,YAAI,MAAM,OAAV;AACA,gBAAQ,GAAR,CAAY,MAAZ;AACH;;AAED,U,CAAM","file":"函数的length属性.js","sourcesContent":["/**\r\n * 指定了默认值以后，函数的length属性，将返回没有指定默认值的参数个数。也就是说，指定了默认值后，length属性将失真。\r\n */\r\n\r\nconsole.log((function (a) {}).length) // 1\r\nconsole.log((function (a = 5) {}).length) // 0\r\nconsole.log((function (a, b, c = 5) {}).length) //2\r\n\r\n// 这是因为length属性的含义是，该函数预期传入的参数个数。\r\n// 某个参数指定默认值以后，预期传入的参数个数就不包括这个参数了。\r\n// 同理，rest参数也不会计入length属性。\r\n\r\nconsole.log((function(...args) {}).length); // 0\r\n\r\n// 如果设置了默认值的参数不是尾参数，那么length属性也不再计入后面的参数了。\r\nconsole.log((function (a = 0, b, c) {}).length) // 0\r\nconsole.log((function (a, b = 1, c) {}).length) // 1\r\n\r\nlet foo = 'outer';\r\nlet f = x => foo;\r\n\r\nfunction bar(func = f) {\r\n    let foo = 'inner';\r\n    console.log(func()); // outer\r\n}\r\n\r\nbar();\r\n\r\nfunction bar(func = () => foo) {\r\n    let foo = 'inner';\r\n    console.log(func());\r\n}\r\n\r\nbar() // ReferenceError: foo is not defined"]}