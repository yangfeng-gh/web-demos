{"version":3,"sources":["作为属性的Symbol.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;AAKA,MAAI,WAAW,uBAAf;;AAEA;AACA,MAAI,IAAI,EAAR;AACA,IAAE,QAAF,IAAc,QAAd;;AAEA;AACA,MAAI,sCACD,QADC,EACU,QADV,CAAJ;;AAIA;AACA,MAAI,IAAI,EAAR;AACA,gCAAsB,CAAtB,EAAyB,QAAzB,EAAmC;AACjC,WAAO;AAD0B,GAAnC;;AAIA;;AAEA;;;AAGA,MAAM,YAAY,uBAAlB;AACA,MAAM,cAAc,uBAApB;;AAEA,WAAS,aAAT,CAAuB,KAAvB,EAA8B;AAC5B,YAAQ,KAAR;AACE,WAAK,SAAL;AACE,eAAO,WAAP;AACF,WAAK,WAAL;AACE,eAAO,SAAP;AACF;AACE,cAAM,IAAI,KAAJ,CAAU,iBAAV,CAAN;AANJ;AAQD","file":"作为属性的Symbol.js","sourcesContent":["/**\r\n * Symbol值作为对象属性名时，不能用点运算符;\r\n * 在对象的内部，使用Symbol值定义属性时，Symbol值必须放在方括号之中;\r\n * Symbol值作为属性名时，该属性还是公开属性，不是私有属性。\r\n */\r\nvar mySymbol = Symbol();\r\n\r\n// 第一种写法\r\nvar a = {};\r\na[mySymbol] = 'Hello!';\r\n\r\n// 第二种写法\r\nvar a = {\r\n  [mySymbol]: 'Hello!'\r\n};\r\n\r\n// 第三种写法\r\nvar a = {};\r\nObject.defineProperty(a, mySymbol, {\r\n  value: 'Hello!'\r\n});\r\n\r\n// 以上写法都得到同样结果\r\n\r\n/**\r\n * Symbol类型还可以用于定义一组常量，保证这组常量的值都是不相等的。\r\n */\r\nconst COLOR_RED = Symbol();\r\nconst COLOR_GREEN = Symbol();\r\n\r\nfunction getComplement(color) {\r\n  switch (color) {\r\n    case COLOR_RED:\r\n      return COLOR_GREEN;\r\n    case COLOR_GREEN:\r\n      return COLOR_RED;\r\n    default:\r\n      throw new Error('Undefined color');\r\n  }\r\n}"]}