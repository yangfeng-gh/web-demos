{"version":3,"sources":["enum.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAKA,MAAI,MAAM,EAAE,KAAK,GAAP,EAAV;AACA,MAAI,OAAO,wCAAgC,GAAhC,EAAqC,KAArC,CAAX;AACA,UAAQ,GAAR,CAAY,IAAZ;;AAEA,MAAI,eAAe,wCAAgC,OAAO,SAAvC,EAAkD,UAAlD,EAA8D,UAAjF;AACA,UAAQ,GAAR,CAAY,YAAZ;;AAEA,MAAI,WAAW,wCAAgC,OAAO,SAAvC,EAAkD,UAAlD,EAA8D,UAA7E;AACA,UAAQ,GAAR,CAAY,QAAZ;AACA;;AAEA,MAAI,MAAM,wCAAgC,EAAhC,EAAoC,QAApC,EAA8C,UAAxD;AACA,UAAQ,GAAR,CAAY,GAAZ;AACA;;AAEA;AACA,MAAI,iBAAiB,wCAAgC;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,4BAAa,CAAE;AAAf;AAAA;AAAA,MAAiB,SAAjD,EAA4D,KAA5D,EAAmE,UAAxF;AACA,UAAQ,GAAR,CAAY,cAAZ;AACA","file":"enum.js","sourcesContent":["/**\r\n * 属性的可枚举性\r\n */\r\n\r\n\r\nlet obj = { foo: 123 };\r\nlet desc = Object.getOwnPropertyDescriptor(obj, 'foo')\r\nconsole.log(desc);\r\n\r\nlet isEnumerable = Object.getOwnPropertyDescriptor(Object.prototype, 'toString').enumerable\r\nconsole.log(isEnumerable);\r\n\r\nlet toString = Object.getOwnPropertyDescriptor(Object.prototype, 'toString').enumerable\r\nconsole.log(toString);\r\n// false\r\n\r\nlet len = Object.getOwnPropertyDescriptor([], 'length').enumerable\r\nconsole.log(len);\r\n// false\r\n\r\n// 另外，ES6规定，所有Class的原型的方法都是不可枚举的。\r\nlet classPrototype = Object.getOwnPropertyDescriptor(class {foo() {}}.prototype, 'foo').enumerable\r\nconsole.log(classPrototype);\r\n// false"]}