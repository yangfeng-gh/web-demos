{"version":3,"sources":["__proto__.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AASA,WAAO,cAAP,CAAsB,OAAO,SAA7B,EAAwC,WAAxC,EAAqD;AACjD,WADiD,iBAC3C;AACF,gBAAI,WAAW,OAAO,IAAP,CAAf;AACA,mBAAO,8BAAsB,QAAtB,CAAP;AACH,SAJgD;AAKjD,WALiD,eAK7C,KAL6C,EAKtC;AACP,gBAAI,SAAS,SAAT,IAAsB,SAAS,IAAnC,EAAyC;AACrC,sBAAM,IAAI,SAAJ,EAAN;AACH;AACD,gBAAI,CAAC,SAAS,IAAT,CAAL,EAAqB;AACjB,uBAAO,SAAP;AACH;AACD,gBAAI,CAAC,SAAS,KAAT,CAAL,EAAsB;AAClB,uBAAO,SAAP;AACH;AACD,gBAAI,SAAS,8BAAuB,IAAvB,EAA6B,KAA7B,CAAb;AACA,gBAAI,CAAC,MAAL,EAAa;AACT,sBAAM,IAAI,SAAJ,EAAN;AACH;AACJ;AAnBgD,KAArD;AAqBA,aAAS,QAAT,CAAkB,KAAlB,EAAyB;AACrB,eAAO,OAAO,KAAP,MAAkB,KAAzB;AACH;;AAED;AACA,QAAI,WAAW,8BAAsB,EAAE,WAAW,IAAb,EAAtB,CAAf;AACA,YAAQ,GAAR,CAAY,QAAZ","file":"__proto__.js","sourcesContent":["/**\r\n * __proto__属性（前后各两个下划线），用来读取或设置当前对象的prototype对象。目前，所有浏览器（包括IE11）都部署了这个属性。\r\n * 该属性没有写入ES6的正文，而是写入了附录，\r\n * 原因是__proto__前后的双下划线，说明它本质上是一个内部属性，而不是一个正式的对外的API，只是由于浏览器广泛支持，才被加入了ES6。\r\n * 标准明确规定，只有浏览器必须部署这个属性，其他运行环境不一定需要部署，而且新的代码最好认为这个属性是不存在的。\r\n * 因此，无论从语义的角度，还是从兼容性的角度，都不要使用这个属性，\r\n * 而是使用下面的Object.setPrototypeOf()（写操作）、Object.getPrototypeOf()（读操作）、Object.create()（生成操作）代替。\r\n*/\r\n\r\nObject.defineProperty(Object.prototype, '__proto__', {\r\n    get() {\r\n        let _thisObj = Object(this);\r\n        return Object.getPrototypeOf(_thisObj);\r\n    },\r\n    set(proto) {\r\n        if (this === undefined || this === null) {\r\n            throw new TypeError();\r\n        }\r\n        if (!isObject(this)) {\r\n            return undefined;\r\n        }\r\n        if (!isObject(proto)) {\r\n            return undefined;\r\n        }\r\n        let status = Reflect.setPrototypeOf(this, proto);\r\n        if (!status) {\r\n            throw new TypeError();\r\n        }\r\n    },\r\n});\r\nfunction isObject(value) {\r\n    return Object(value) === value;\r\n}\r\n\r\n// 如果一个对象本身部署了__proto__属性，则该属性的值就是对象的原型。\r\nlet objProto = Object.getPrototypeOf({ __proto__: null })\r\nconsole.log(objProto);"]}