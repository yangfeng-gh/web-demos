{"version":3,"sources":["Promise实例作为参数.es6"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAGA,QAAI,KAAK,sBAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC5C,mBAAW;AAAA,mBAAM,QAAQ,SAAR,CAAN;AAAA,SAAX,EAAqC,IAArC;AACA;AACH,KAHQ,CAAT;;AAKA,QAAI,KAAK,sBAAY,UAAU,OAAV,EAAmB,MAAnB,EAA2B;AAC5C,mBAAW;AAAA,mBAAM,QAAQ,EAAR,CAAN;AAAA,SAAX,EAA8B,IAA9B;AACH,KAFQ,CAAT;;AAIA,OAAG,IAAH,CAAQ;AAAA,eAAU,QAAQ,GAAR,CAAY,MAAZ,CAAV;AAAA,KAAR,EAAuC,KAAvC,CAA6C;AAAA,eAAS,QAAQ,GAAR,CAAY,KAAZ,CAAT;AAAA,KAA7C;;AAEA","file":"Promise实例作为参数.js","sourcesContent":["/**\r\n * Created by yvan on 2016-07-29.\r\n */\r\nvar p1 = new Promise(function (resolve, reject) {\r\n    setTimeout(() => resolve('success'), 3000);\r\n    // setTimeout(() => reject(new Error('fail')), 3000);\r\n});\r\n\r\nvar p2 = new Promise(function (resolve, reject) {\r\n    setTimeout(() => resolve(p1), 1000)\r\n});\r\n\r\np2.then(result => console.log(result)).catch(error => console.log(error));\r\n\r\n// result => console.log(result) 变成了针对p1, 当p1从pending变成resolved状态后"]}